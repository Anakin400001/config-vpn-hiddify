```java
import java.lang.Math; // Для математических функций и константы PI

public class SeriesCalculations {

    public static void main(String[] args) {

        // --- Задача 1: S = 1 + x/1! + x^2/2! + ... для x в [0; 2], eps = 0.00001 ---
        System.out.println("--- Задача 1 ---");
        double x1 = 1.5; // Пример значения x из интервала [0; 2]
        double eps1 = 0.00001;
        double sum1 = 1.0;
        double term1 = 1.0;
        int n1 = 1;
        double currentTermAbs1;
        do {
            term1 = term1 * x1 / n1;
            currentTermAbs1 = Math.abs(term1);
            if (currentTermAbs1 >= eps1) {
                 sum1 += term1;
            }
            n1++;
        } while (currentTermAbs1 >= eps1);
        System.out.println("x = " + x1 + ", eps = " + eps1);
        System.out.println("Результат S (Задача 1): " + sum1);
        System.out.println("Для сравнения Math.exp(x): " + Math.exp(x1)); // Это ряд для e^x
        System.out.println(); // Пустая строка для разделения

        // --- Задача 2: S = 1 - x^2/2! + x^4/4! - ... для x = 1, eps = 0.0001 ---
        System.out.println("--- Задача 2 ---");
        double x2 = 1.0; // Значение x задано как 1
        double eps2 = 0.0001;
        double sum2 = 1.0; // Первый член ряда (n=0)
        double term2 = 1.0;
        int n2 = 1;
        double currentTermAbs2;
        do {
            // Calculate next term: term_n = -term_(n-1) * x^2 / ((2n-1) * 2n)
            term2 = -term2 * x2 * x2 / ((2 * n2 - 1) * (2 * n2));
            currentTermAbs2 = Math.abs(term2);
            if (currentTermAbs2 >= eps2) {
                sum2 += term2;
            }
            n2++;
        } while (currentTermAbs2 >= eps2);
        System.out.println("x = " + x2 + ", eps = " + eps2);
        System.out.println("Результат S (Задача 2): " + sum2);
        System.out.println("Для сравнения Math.cos(x): " + Math.cos(x2)); // Это ряд для cos(x)
        System.out.println();

        // --- Задача 5: S = cos(x) + cos(2x)/2 + ... для x в [pi/5; 9pi/5], eps = 0.0001 ---
        System.out.println("--- Задача 5 ---");
        double x5 = Math.PI / 2.0; // Пример значения x из интервала [pi/5; 9pi/5]
        double eps5 = 0.0001;
        double sum5 = 0.0;
        double term5;
        int n5 = 1;
        while (true) {
            term5 = Math.cos(n5 * x5) / n5;
            if (Math.abs(term5) < eps5) {
                break; // Выходим, если член ряда достаточно мал
            }
            sum5 += term5;
            n5++;
        }
        System.out.println("x = " + x5 + ", eps = " + eps5);
        System.out.println("Результат S (Задача 5): " + sum5);
        // (Для этого ряда нет простой стандартной функции для сравнения)
        System.out.println();

        // --- Задача 6: S = x + x^3/3! + x^5/5! + ... для x в [0; 1], eps = 0.00005 ---
        System.out.println("--- Задача 6 ---");
        double x6 = 0.8; // Пример значения x из интервала [0; 1]
        double eps6 = 0.00005;
        double sum6 = 0.0;
        double term6 = x6; // Первый член ряда (n=0)
        int n6 = 1;
        double currentTermAbs6;
        do {
             currentTermAbs6 = Math.abs(term6);
             if (currentTermAbs6 >= eps6) {
                sum6 += term6;
                 // Calculate next term: term_n = term_(n-1) * x^2 / (2n * (2n+1))
                term6 = term6 * x6 * x6 / ((2 * n6) * (2 * n6 + 1));
                n6++;
            }
        } while (currentTermAbs6 >= eps6);
        System.out.println("x = " + x6 + ", eps = " + eps6);
        System.out.println("Результат S (Задача 6): " + sum6);
        System.out.println("Для сравнения Math.sinh(x): " + Math.sinh(x6)); // Это ряд для sinh(x)
        System.out.println();

        // --- Задача 8: S = cos(x) + cos(3x)/3^2 + ... для x в [pi/5; pi], eps = 0.0001 ---
        System.out.println("--- Задача 8 ---");
        double x8 = Math.PI / 3.0; // Пример значения x из интервала [pi/5; pi]
        double eps8 = 0.0001;
        double sum8 = 0.0;
        double term8;
        int n8 = 1;
        while (true) {
            double denom = 2.0 * n8 - 1.0; // Знаменатель 1, 3, 5, ...
            term8 = Math.cos(denom * x8) / (denom * denom); // Член ряда
             if (Math.abs(term8) < eps8) {
                break; // Выходим, если член ряда достаточно мал
            }
            sum8 += term8;
            n8++;
        }
        System.out.println("x = " + x8 + ", eps = " + eps8);
        System.out.println("Результат S (Задача 8): " + sum8);
        // (Для этого ряда нет простой стандартной функции для сравнения)
        System.out.println();

    } // Конец main метода

} // Конец класса SeriesCalculations

// Вывод: Я научился(лась) программно вычислять значения математических функций, представленных в виде бесконечных рядов (Тейлора, Фурье и др.), используя итерационные алгоритмы с контролем точности вычислений на языке Java.
```

**Как это работает:**

1.  **`import java.lang.Math;`**: Подключаем библиотеку `Math` для использования `Math.abs()` (модуль числа), `Math.cos()`, `Math.PI`, `Math.exp()`, `Math.sinh()`.
2.  **`public class SeriesCalculations`**: Объявляем класс. Имя файла должно быть `SeriesCalculations.java`.
3.  **`public static void main(String[] args)`**: Главный метод, откуда начинается выполнение.
4.  **Для каждой задачи:**
    *   Выводится заголовок `--- Задача N ---`.
    *   Объявляются и инициализируются нужные переменные (`x`, `eps`, `sum`, `term`, `n`). Значения `x` выбраны произвольно из указанных в задании интервалов.
    *   Копируется соответствующий блок кода для вычисления суммы ряда.
    *   Используется `System.out.println(...)` для вывода исходных данных (`x`, `eps`) и полученного результата (`sum`).
    *   Где возможно, для сравнения выводится значение стандартной математической функции, которой соответствует данный ряд (`Math.exp`, `Math.cos`, `Math.sinh`).
    *   `System.out.println();` добавляет пустую строку для лучшей читаемости вывода.
5.  **В конце файла (вне класса и метода):** Добавлен комментарий с выводом студента.
